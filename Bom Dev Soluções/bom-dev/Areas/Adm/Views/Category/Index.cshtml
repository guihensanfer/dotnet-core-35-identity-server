@model IEnumerable<Data.Models.Category>

@{
    ViewData["Title"] = "Index";
}

@{
    if (@ViewData["errorMsg"] != null)
    {

        <div class="alert alert-danger" role="alert">
            @ViewData["errorMsg"]
        </div>        
    }
    if (@ViewData["successMsg"] != null)
    {
        <div class="alert alert-success" role="alert">
            @ViewData["successMsg"]
        </div>
    }
}

<h1>Categorias</h1>

<p>
    <a asp-area="Adm" asp-action="Create">Create New</a>
</p>

<div class="toolbar">
    <div class="dropdown">
        <button class="btn btn-secondary" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <svg width="16" height="16" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><g data-name="Layer 2"><path d="M13 23a10 10 0 1 1 10-10 10 10 0 0 1-10 10Zm0-18a8 8 0 1 0 8 8 8 8 0 0 0-8-8Z" fill="#000" class="fill-000000" /><path d="M28 29a1 1 0 0 1-.71-.29l-8-8a1 1 0 0 1 1.42-1.42l8 8a1 1 0 0 1 0 1.42A1 1 0 0 1 28 29Z" fill="#000" class="fill-000000" /></g><path d="M0 0h32v32H0z" fill="none" /></svg>
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <h6 class="dropdown-header">Pesquisar</h6>
            <div class="dropdown-item">
                <form id="filtersForm" method="get">
                    <div class="toolbar-content">
                        <nav class="navbar navbar-expand-md navbar-light">
                            <div class="nav-item active">
                                <label for="selectEnabled">@Html.DisplayNameFor(model => model.Name)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>
                                <input id="inputName" class="form-control" type="text" name="name" value="" />

                            </div>
                            <div class="nav-item active">
                                <label for="selectEnabled">@Html.DisplayNameFor(model => model.Enabled)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>
                                <select name="enabled" id="selectEnabled" class="form-control">
                                    <option value="all">-</option>
                                    <option value="true">Sim</option>
                                    <option value="false">Não</option>
                                </select>
                            </div>
                            <div class="nav-item active">
                                <label for="selectOrder">@Html.DisplayNameFor(model => model.Order)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>
                                <select name="order" id="selectOrder" value="1" class="form-control">
                                    @{
                                        var orders = Enum.GetValues(typeof(Data.Models.Category.OrderView))
                                            .Cast<Data.Models.Category.OrderView>();

                                        foreach (var order in orders)
                                        {
                                            string index = ((int)order).ToString();

                                            <option value="@index">@string.Format("{0}º nível", index)</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="nav-item active">
                                <label>&nbsp;</label>
                                <input type="submit" value="Filtrar" class="form-control" />
                            </div>
                            <div class="nav-item active">
                                <label>&nbsp;</label>
                                <input type="reset" value="Limpar filtros" class="form-control" />
                            </div>
                        </nav>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <div class="dropdown">
        <button class="btn btn-secondary" type="button" id="dropdown2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <img src="~/img/excel.png" width="16" height="16" alt="Export to excel" />
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdown2">
            <h6 class="dropdown-header">Exportar dados</h6>
            <div class="dropdown-item">
                <a class="nav-link" href="#" onclick="exportToExcel(); return false;">Exportar para Excel</a>
            </div>
        </div>
    </div>

</div>

<table class="table">
    <thead>
        <tr>
            <th>

            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Enabled)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            bool flagBold = true;
            foreach (var item in Model)
            {
                if (item.Order == Data.Models.Category.OrderView.First)
                {
                    flagBold = !flagBold;

                    <tr class="spacer"></tr>
                }


                <tr>
                    <td>
                        <a asp-area="adm" asp-action="Index" asp-route-parentCategoryId="@item.CategoryId">+</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NameView)

                        <h6 class="text-info">@Html.DisplayFor(modelItem => item.PathView)</h6>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Enabled)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Order)
                    </td>
                    <td>
                        <a asp-area="adm" asp-action="Edit" asp-route-id="@item.CategoryId">Edit</a> |
                        <a asp-area="adm" asp-action="Details" asp-route-id="@item.CategoryId">Details</a> |
                        <a asp-area="adm" asp-action="Delete" asp-route-id="@item.CategoryId">Delete</a>
                    </td>
                </tr>

            }

        }

    </tbody>
</table>
@section Scripts {

    <script>
        $(document).ready(function () {
            // Obtém a string de consulta (query string) da URL
            var queryString = window.location.search;
            // Cria um objeto URLSearchParams a partir da string de consulta
            var searchParams = new URLSearchParams(queryString);
            var selectEnabled = document.getElementById('selectEnabled');
            var selectOrder = document.getElementById('selectOrder');
            var inputName = document.getElementById('inputName');
            const defaultSelectedValue = '-';

            selectEnabled.value = searchParams.get('enabled') ?? defaultSelectedValue;
            selectOrder.value = searchParams.get('order') ?? '1';
            inputName.value = searchParams.get('name') ?? '';
        });

        $("#filtersForm .form-control").click(function (e) {
            e.stopPropagation();
        });

        function exportToExcel() {
            loadingShow();

            // Obtém a URL atual
            var currentUrl = window.location.href;

            // Verifica se a URL já contém parâmetros
            var separator = currentUrl.includes('?') ? '&' : '?';

            // Adiciona o novo parâmetro à URL
            var exportUrl = currentUrl + separator + 'exportToExcel=true';

            // Redireciona para a nova URL
            window.location.href = exportUrl;
        }
    </script>

}

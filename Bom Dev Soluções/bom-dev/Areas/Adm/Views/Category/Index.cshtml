@model IEnumerable<Data.Models.Category>

@{
    ViewData["Title"] = "Index";
}



<h1>Categorias</h1>

<p>
    <a asp-area="Adm" asp-action="Create">Create New</a>
</p>

<div class="toolbar">
    <form id="filtersForm" method="get">
        <div class="toolbar-content">
            <nav class="navbar navbar-expand-md navbar-light">
                <div class="nav-item active">
                    <label for="selectEnabled">@Html.DisplayNameFor(model => model.Name)</label>
                    <input id="inputName" class="form-control" type="text" name="name" value="" />

                </div>
                <div class="nav-item active">
                    <label for="selectEnabled">@Html.DisplayNameFor(model => model.Enabled)</label>
                    <select name="enabled" id="selectEnabled" class="form-control">
                        <option value="all">-</option>
                        <option value="true">Sim</option>
                        <option value="false">Não</option>
                    </select>
                </div>
                <div class="nav-item active">
                    <label for="selectOrder">@Html.DisplayNameFor(model => model.Order)</label>
                    <select name="order" id="selectOrder" value="1" class="form-control">                        
                        @{
                            var orders = Enum.GetValues(typeof(Data.Models.Category.OrderView))
                                .Cast<Data.Models.Category.OrderView>();

                            foreach (var order in orders)
                            {
                                string index = ((int)order).ToString();

                                <option value="@index">@string.Format("{0}º nível", index)</option>
                            }
                        }
                    </select>
                </div>
                <div class="nav-item active">
                    <label>&nbsp;</label>
                    <input type="submit" value="Filtrar" class="form-control" />
                </div>
                <div class="nav-item active">
                    <label>&nbsp;</label>
                    <input type="reset" value="Limpar filtros" class="form-control" />
                </div>
            </nav>
        </div>
    </form>

</div>

<table class="table">
    <thead>
        <tr>
            <th>
                
            </th>
            <th>
                Nome
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            bool flagBold = true;
            foreach (var item in Model)
            {
                if (item.Order == Data.Models.Category.OrderView.First)
                {
                    flagBold = !flagBold;

                    <tr class="spacer"></tr>
                }


                <tr>
                    <td>
                        <a asp-area="adm" asp-action="Index" asp-route-parentCategoryId="@item.CategoryId">+</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NameView)
                        
                        <h6 class="text-info">@Html.DisplayFor(modelItem => item.PathView)</h6>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Order)
                    </td>
                    <td>                         
                        <a asp-area="adm" asp-action="Edit" asp-route-id="@item.CategoryId">Edit</a> |
                        <a asp-area="adm" asp-action="Details" asp-route-id="@item.CategoryId">Details</a> |
                        <a asp-area="adm" asp-action="Delete" asp-route-id="@item.CategoryId">Delete</a>
                    </td>
                </tr>

            }

        }

    </tbody>
</table>
@section Scripts {

    <script>
        $(document).ready(function () {
            // Obtém a string de consulta (query string) da URL
            var queryString = window.location.search;
            // Cria um objeto URLSearchParams a partir da string de consulta
            var searchParams = new URLSearchParams(queryString);
            var selectEnabled = document.getElementById('selectEnabled');
            var selectOrder = document.getElementById('selectOrder');
            var inputName = document.getElementById('inputName');
            const defaultSelectedValue = '-';

            selectEnabled.value = searchParams.get('enabled') ?? defaultSelectedValue;
            selectOrder.value = searchParams.get('order') ?? '1';            
            inputName.value = searchParams.get('name') ?? '';
        });
    </script>

}

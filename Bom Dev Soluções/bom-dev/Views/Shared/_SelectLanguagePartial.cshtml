@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures;
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<form id="selectLanguage" asp-area="" asp-controller="Home" asp-action="SetLanguage" asp-route-returnUrl="@returnUrl" method="post" class="form-horizontal" role="form">

    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <img src="/img/language.png" id="selectLanguageImg" width="16" height="16" class="mr-2">
            @requestCulture.RequestCulture.Culture.Name
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            @{
                foreach (var culture in cultureItems)
                {
                    <a class="dropdown-item language-option" onclick="$('#selectLanguage input[name=\'culture\']').val($(this).data('value'));$('#selectLanguage').submit();" href="#" data-value="@culture.Name">
                        @culture.DisplayName
                    </a>
                }
            }
        </div>
    </div>
    <input type="hidden" name="culture" value="" />
</form>